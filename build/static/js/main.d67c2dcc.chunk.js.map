{"version":3,"sources":["components/assets/landing.jpg","utils/localStorageHelpers.js","components/NavBar.js","components/FormError.js","components/DemoCredsInfo.js","data/demoCreds.js","backendUrl.js","services/contacts.js","services/auth.js","components/RegisterForm.js","components/LoginForm.js","components/Search.js","utils/arraysAndFuncs.js","components/AddContactModal.js","components/LinkFormModal.js","components/DeleteModal.js","components/DisplayPictureModal.js","components/EditContactModal.js","components/ContactCard.js","components/ContactsLoader.js","components/ContactsDisplay.js","components/Dashboard.js","components/Routes.js","App.js","index.js"],"names":["module","exports","user","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","boolean","NavBar","setUser","isDarkMode","setIsDarkMode","useState","setIconLoading","location","useLocation","isMobile","useMediaQuery","maxWidth","handleLogout","storageService","handleDarkModeToggle","setTimeout","Menu","borderless","inverted","size","secondary","color","className","Item","header","Icon","name","href","target","rel","style","position","Dropdown","item","icon","displayName","onClick","borderRadius","background","marginRight","as","Link","to","pathname","FormError","message","setError","title","positive","Message","negative","Header","Button","floated","compact","circular","DemoCredsInfo","content","backendUrl","baseUrl","token","setConfig","headers","setToken","newToken","getAll","a","axios","get","response","data","addNew","contactObj","post","deleteContact","id","delete","editContact","patch","addLink","linkObj","editLink","urlId","deleteLink","login","credentials","register","enteredData","RegisterForm","notify","email","password","userDetails","setUserDetails","confirmPassword","setConfirmPassword","error","isLoading","setIsLoading","showPass","setShowPass","showConfirmPass","setShowConfirmPass","history","useHistory","handleOnChange","e","value","handleRegister","preventDefault","authService","contactService","appearance","push","errRes","Segment","basic","Grid","columns","stackable","Row","Column","Image","window","innerWidth","marginTop","src","imageUrl","textAlign","Form","onSubmit","Input","required","placeholder","label","type","onChange","iconPosition","action","animated","labelPosition","loading","fluid","LoginForm","setCredentials","handleLogin","paddingLeft","marginLeft","Container","width","Search","search","setSearch","float","optionsArray","key","text","siteIconsArray","labelColors","getCircularAvatar","imageLink","split","join","generateBase64Encode","file","setState","reader","FileReader","readAsDataURL","onloadend","result","AddContactModal","setContacts","options","handleOptionAddition","modalOpen","setModalOpen","setName","url","setUrl","site","setSite","displayPicture","setDisplayPicture","fileName","setFileName","handleClose","addNewContact","contactObject","contacts","returnedObject","prevState","concat","Modal","closeIcon","open","trigger","onOpen","onClose","Content","Select","allowAdditions","selection","onAddItem","htmlFor","accept","hidden","files","rounded","Actions","LinkFormModal","urlToEdit","siteToEdit","newObject","addNewLink","map","c","targetContact","find","updatedContactsKey","t","updatedContact","isTypeEdit","undefined","DeleteModal","contact","urlLink","urlName","setOpen","handleContactDelete","filter","handleLinkDelete","isTypeContact","DisplayPictureModal","contactName","avatar","height","EditContactModal","oldName","p","ContactCard","linkCharCount","formattedLink","link","length","slice","Card","boxShadow","exists","Label","Math","floor","random","List","divided","relaxed","includes","toLowerCase","startsWith","Description","ContactsLoader","Array","from","_","i","raised","Placeholder","image","Line","Paragraph","ContactsDisplay","contactsToDisplay","filterByName","u","filterByProfileLinks","Dashboard","Routes","exact","path","App","setOptions","useToasts","addToast","useEffect","loggedUser","getAllContacts","ReactDOM","render","placement","autoDismiss","document","getElementById"],"mappings":"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","file":"static/js/main.d67c2dcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.c758a825.jpg\";","const storageKeyToken = 'profileStoreUserKey';\nconst storageKeyDarkMode = 'profileStoreDarkMode';\n\nconst saveUser = (user) =>\n  localStorage.setItem(storageKeyToken, JSON.stringify(user));\n\nconst loadUser = () => JSON.parse(localStorage.getItem(storageKeyToken));\n\nconst logoutUser = () => localStorage.removeItem(storageKeyToken);\n\nconst saveDarkMode = (boolean) =>\n  localStorage.setItem(storageKeyDarkMode, boolean);\n\nconst loadDarkMode = () => localStorage.getItem(storageKeyDarkMode);\n\nexport default {\n  saveUser,\n  loadUser,\n  logoutUser,\n  saveDarkMode,\n  loadDarkMode,\n};\n","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport storageService from '../utils/localStorageHelpers';\nimport { useMediaQuery } from 'react-responsive';\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\n\nconst NavBar = ({ user, setUser, isDarkMode, setIsDarkMode }) => {\n  const [iconLoading, setIconLoading] = useState(false);\n  const location = useLocation();\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const handleLogout = () => {\n    setUser(null);\n    storageService.logoutUser();\n  };\n\n  const handleDarkModeToggle = () => {\n    setIsDarkMode(!isDarkMode);\n    setIconLoading(true);\n    storageService.saveDarkMode(!isDarkMode);\n    setTimeout(() => setIconLoading(false), 2150);\n  };\n\n  const logoutMenu = () => {\n    return isMobile ? (\n      <Dropdown item icon=\"sidebar\">\n        <Dropdown.Menu className={isDarkMode ? 'dark-mode-menu' : ''}>\n          <Dropdown.Item>\n            <Icon name=\"user\" />\n            <span>{`Hi, ${user.displayName}`}</span>\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleLogout}>\n            <Icon name=\"sign-out\" />\n            <span>Logout</span>\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleDarkModeToggle}>\n            <Icon\n              name={isDarkMode ? 'moon' : 'sun'}\n              color={isDarkMode ? 'purple' : 'yellow'}\n            />\n            <span>Dark Mode: {isDarkMode ? 'ON' : 'OFF'}</span>\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    ) : (\n      <>\n        <Menu.Item>\n          <Icon name=\"user\" />\n          {`Hi, ${user.displayName}`}\n        </Menu.Item>\n        <Menu.Item style={{borderRadius : \"21px\",background : \"#FF6666\",marginRight : \"20px\"}} name=\"Logout\" onClick={handleLogout} icon=\"sign-out\" />\n      </>\n    );\n  };\n\n  const loginRegisterMenu = () => {\n    return isMobile ? (\n      <Dropdown item icon=\"sidebar\">\n        <Dropdown.Menu className={isDarkMode ? 'dark-mode-menu' : ''}>\n          <Dropdown.Item as={Link} to=\"/register\">\n            <Icon name=\"signup\" />\n            <span>Register</span>\n          </Dropdown.Item>\n          <Dropdown.Item as={Link} to=\"/login\">\n            <Icon name=\"sign-in\" />\n            <span>Login</span>\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleDarkModeToggle}>\n            <Icon\n              name={isDarkMode ? 'moon' : 'sun'}\n              color={isDarkMode ? 'purple' : 'yellow'}\n            />\n            <span>Dark Mode: {isDarkMode ? 'ON' : 'OFF'}</span>\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    ) : (\n      <>\n        <Menu.Item\n          as={Link}\n          name=\"Register\"\n          to=\"/register\"\n          icon=\"signup\"\n          style={{borderRadius : \"21px\",background : location.pathname === '/register' ? \"#22CB5C\" : \"\"}}\n        />\n        <Menu.Item\n          as={Link}\n          name=\"Login\"\n          to=\"/login\"\n          icon=\"sign-in\"\n          style={{borderRadius : \"21px\",background : location.pathname === '/login' ? \"#22CB5C\" : \"\", color : \"black\"}}\n        />\n      </>\n    );\n  };\n\n  return (\n    <Menu\n      borderless={isMobile}\n      inverted={isDarkMode}\n      size=\"small\"\n      // inverted\n      secondary\n      color=\"teal\"\n      className=\"nav-bar\"\n    >\n      <Menu.Item header className=\"nav-title\">\n        <div className=\"nav-logo\">\n          <Icon name=\"font awesome\" />\n          Contactryy\n        </div>\n        <small>\n          by &nbsp;\n          <a\n            href=\"https://iamahmer.netlify.app/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"nav-link\"\n            style={{color : \"gold\"}}\n          >\n            The Golden Dev\n          </a>\n        </small>\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        {user ? <>{logoutMenu()}</> : <>{loginRegisterMenu()}</>}\n        {/* {!isMobile && (\n          <Menu.Item>\n            <Icon\n              name={isDarkMode ? 'moon' : 'sun'}\n              size=\"large\"\n              color={isDarkMode ? 'purple' : 'yellow'}\n              circular\n              loading={iconLoading}\n              link\n              onClick={handleDarkModeToggle}\n            />\n          </Menu.Item>\n        )} */}\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Message, Button } from 'semantic-ui-react';\n\nconst FormError = ({ message, setError, title, positive }) => {\n  return (\n    <Message negative={positive ? false : true}>\n      <Message.Header>\n        {title || 'Error'}\n        <Button\n          icon=\"close\"\n          color=\"red\"\n          floated=\"right\"\n          onClick={() => setError(null)}\n          compact\n          size=\"mini\"\n          circular\n        />\n      </Message.Header>\n      <p>{message}</p>\n    </Message>\n  );\n};\n\nexport default FormError;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport demoCredentials from '../data/demoCreds';\n\nconst DemoCredsInfo = () => {\n  return (\n    <Message header=\"Demo Account Credentials\" content={demoCredentials} />\n  );\n};\n\nexport default DemoCredsInfo;\n","const demoCredentials = \"Email: 'test@test.com' & password: 'password'\";\n\nexport default demoCredentials;\n","const backendUrl = 'https://mernstorebackend.herokuapp.com';\n// const backendUrl = 'http://localhost:3005';\n\nexport default backendUrl;\n    ","import axios from 'axios';\nimport backendUrl from '../backendUrl';\n\nconst baseUrl = `${backendUrl}/api/contacts`;\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = newToken;\n};\n\nconst setConfig = () => {\n  return {\n    headers: { 'x-auth-token': token },\n  };\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl, setConfig());\n  return response.data;\n};\n\nconst addNew = async (contactObj) => {\n  const response = await axios.post(baseUrl, contactObj, setConfig());\n  return response.data;\n};\n\nconst deleteContact = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`, setConfig());\n  return response.data;\n};\n\nconst editContact = async (id, contactObj) => {\n  const response = await axios.patch(\n    `${baseUrl}/${id}/name_dp`,\n    contactObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst addLink = async (id, linkObj) => {\n  const response = await axios.post(\n    `${baseUrl}/${id}/url`,\n    linkObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst editLink = async (id, urlId, linkObj) => {\n  const response = await axios.patch(\n    `${baseUrl}/${id}/url/${urlId}`,\n    linkObj,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst deleteLink = async (id, urlId) => {\n  const response = await axios.delete(\n    `${baseUrl}/${id}/url/${urlId}`,\n    setConfig()\n  );\n  return response.data;\n};\n\nexport default {\n  setToken,\n  getAll,\n  addNew,\n  deleteContact,\n  editContact,\n  addLink,\n  editLink,\n  deleteLink,\n};\n","import axios from 'axios';\nimport backendUrl from '../backendUrl';\n\nconst login = async (credentials) => {\n  const response = await axios.post(`${backendUrl}/api/login`, credentials);\n  return response.data;\n};\n\nconst register = async (enteredData) => {\n  const response = await axios.post(`${backendUrl}/api/register`, enteredData);\n  return response.data;\n};\n\nexport default { login, register };\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport FormError from './FormError';\nimport DemoCredsInfo from './DemoCredsInfo';\nimport contactService from '../services/contacts';\nimport authService from '../services/auth';\nimport storageService from '../utils/localStorageHelpers';\nimport { useMediaQuery } from 'react-responsive';\nimport { Segment, Form, Button, Icon, Header,Grid,Image} from 'semantic-ui-react';\nimport imageUrl from \"./assets/landing.jpg\"\n\nconst RegisterForm = ({ setUser, notify, isDarkMode }) => {\n  const [userDetails, setUserDetails] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n  });\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const history = useHistory();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const { displayName, email, password } = userDetails;\n\n  const handleOnChange = (e) => {\n    setUserDetails({ ...userDetails, [e.target.name]: e.target.value });\n  };\n\n  const handleRegister = async (e) => {\n    if (password !== confirmPassword)\n      return setError(`Confirm password failed. Both passwords need to match.`);\n    e.preventDefault();\n    try {\n      setIsLoading(true);\n      const user = await authService.register(userDetails);\n      setUser(user);\n      contactService.setToken(user.token);\n      storageService.saveUser(user);\n      setIsLoading(false);\n      setError(null);\n\n      notify(`Welcome ${user.displayName}, you have successfully registered!`, {\n        appearance: 'success',\n      });\n      history.push('/');\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err?.response?.data;\n\n      if (errRes?.error) {\n        return setError(errRes.error);\n      } else {\n        return setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <Segment\n    basic\n      className={\n        isDarkMode ? 'login-reg-card dark-mode-segment' : 'login-reg-card'\n      }\n      inverted={isDarkMode}\n    >\n      <Grid columns =\"2\" stackable>\n          <Grid.Row>\n            <Grid.Column>\n            <Image style={{marginRight : window.innerWidth > 800 ? \"260px\" : \"\",marginTop : window.innerWidth > 800 ? \"90px\" : \"\"}} size=\"large\" src={imageUrl}></Image>\n            </Grid.Column>\n            <Grid.Column>\n      <Header as={isMobile ? 'h3' : 'h2'} textAlign=\"center\">\n        Create an account\n      </Header>\n      <Form\n        onSubmit={handleRegister}\n        className={isDarkMode ? 'dark-mode-auth-form auth-form' : 'auth-form'}\n      >\n        <Form.Input\n          required\n          placeholder=\"For ex. Ahmer\"\n          label=\"Dispay Name\"\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleOnChange}\n          icon=\"user\"\n          iconPosition=\"left\"\n        />\n        <Form.Input\n          required\n          placeholder=\"For ex. ahmer@example.com\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleOnChange}\n          icon=\"at\"\n          iconPosition=\"left\"\n        />\n        <Form.Input\n          required\n          placeholder=\"Password must have minimum characters of 6.\"\n          label=\"Password\"\n          type={showPass ? 'text' : 'password'}\n          name=\"password\"\n          value={password}\n          onChange={handleOnChange}\n          icon=\"lock\"\n          iconPosition=\"left\"\n          action={\n            password !== '' && {\n              icon: showPass ? 'eye slash' : 'eye',\n              onClick: () => setShowPass(!showPass),\n            }\n          }\n        />\n        <Form.Input\n          required\n          placeholder=\"Confirm Password\"\n          label=\"Confirm Password\"\n          type={showConfirmPass ? 'text' : 'password'}\n          value={confirmPassword}\n          onChange={({ target }) => setConfirmPassword(target.value)}\n          icon=\"lock\"\n          iconPosition=\"left\"\n          action={\n            confirmPassword !== '' && {\n              icon: showConfirmPass ? 'eye slash' : 'eye',\n              onClick: () => setShowConfirmPass(!showConfirmPass),\n            }\n          }\n        />\n\n        <Button\n          animated=\"vertical\"\n          color=\"teal\"\n          icon\n          labelPosition=\"left\"\n          type=\"submit\"\n          floated=\"right\"\n          loading={isLoading}\n          size={isMobile ? 'small' : 'large'}\n          fluid={isMobile}\n        >\n          <Icon name=\"signup\" />\n          Register\n        </Button>\n        <Header\n          as=\"h4\"\n          textAlign={isMobile ? 'center' : 'left'}\n          className=\"login-reg-bottom-text\"\n        >\n          Already have an account? <Link to=\"/login\">Login.</Link>\n        </Header>\n      </Form>\n      {error && <FormError message={error} setError={setError} />}\n      <DemoCredsInfo />\n      </Grid.Column>\n      </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport FormError from './FormError';\nimport DemoCredsInfo from './DemoCredsInfo';\nimport contactService from '../services/contacts';\nimport authService from '../services/auth';\nimport storageService from '../utils/localStorageHelpers';\nimport { useMediaQuery } from 'react-responsive';\nimport { Segment, Form, Button, Icon, Header, Container,Image } from 'semantic-ui-react';\nimport imageUrl from \"./assets/landing.jpg\"\n\nconst LoginForm = ({ setUser, notify, isDarkMode }) => {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: '',\n  });\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPass, setShowPass] = useState(false);\n  const history = useHistory();\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const { email, password } = credentials;\n\n  const handleOnChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      setIsLoading(true);\n      const user = await authService.login(credentials);\n      setUser(user);\n      contactService.setToken(user.token);\n      storageService.saveUser(user);\n      setIsLoading(false);\n      setError(null);\n\n      notify(`Welcome ${user.displayName}, you're logged in!`, {\n        appearance: 'success',\n      });\n      history.push('/');\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err?.response?.data;\n\n      if (errRes?.error) {\n        return setError({ message: errRes.error });\n      } else {\n        return setError({ message: err.message });\n      }\n    }\n  };\n\n  return (\n    <Segment\n    basic\n    style ={{paddingLeft : \"14em\"}}\n      className={\n        isDarkMode ? 'login-reg-card login-form dark-mode-segment' : 'login-reg-card login-from'\n      }\n      inverted={isDarkMode}\n      textAlign=\"center\"\n    >\n      <Image size=\"medium\" style={{marginLeft : window.innerWidth > 800 ? \"210px\" : \"\"}} src={imageUrl}></Image>\n      <Header as={isMobile ? 'h3' : 'h2'} textAlign=\"center\">\n        Login to your account\n      </Header>\n      <Container style = {{width : \"400px\"}}>\n      <Form\n        onSubmit={handleLogin}\n        className={isDarkMode ? 'dark-mode-auth-form auth-form' : 'auth-form'}\n      >\n        \n        <Form.Input\n          required\n          placeholder=\"For ex. abc@example.com\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          \n          onChange={handleOnChange}\n          icon=\"at\"\n          iconPosition=\"left\"\n        />\n        <Form.Input\n          required\n          placeholder=\"Password must have minimum characters of 6.\"\n          label=\"Password\"\n          type={showPass ? 'text' : 'password'}\n          name=\"password\"\n          value={password}\n          onChange={handleOnChange}\n          icon=\"lock\"\n          iconPosition=\"left\"\n          action={\n            password !== '' && {\n              icon: showPass ? 'eye slash' : 'eye',\n              onClick: () => setShowPass(!showPass),\n            }\n          }\n        />\n\n        <Button\n          // animated=\"vertical\"\n          style = {{color:\"black\",width : \"150px\",background : \"#22CB5C\",borderRadius : \"21px\",textAlign : \"center\"}}\n          // labelPosition=\"left\"\n          type=\"submit\"\n          loading={isLoading}\n          size={isMobile ? 'small' : 'large'}\n          fluid={isMobile}\n        >\n          Login\n        </Button>\n        <Header\n          as=\"h4\"\n          textAlign={isMobile ? 'center' : 'left'}\n          className=\"login-reg-bottom-text\"\n        >\n          Don't have an account? <Link to=\"/register\">Register.</Link>\n        </Header>\n      </Form>\n      <DemoCredsInfo />\n      </Container>\n      {error && (\n        <FormError\n          message={error.message}\n          title={error.title}\n          positive={error.positive}\n          setError={setError}\n        />\n      )}\n      \n    </Segment>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { Input } from 'semantic-ui-react';\n\nconst Search = ({ search, setSearch, isDarkMode }) => {\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <div className=\"search-card\">\n      <Input\n        className={isDarkMode ? 'dark-mode-input' : ''}\n        fluid ={window.innerWidth > 800 ? false : true}\n        style ={{float : window.innerWidth > 800 ? \"right\" : \"\",borderRadius : \"21px\"}}\n        size=\"large\"\n        type=\"text\"\n        value={search}\n        onChange={handleSearch}\n        placeholder=\"Search for contact name or profile link\"\n        icon={{ name: 'search', color: 'teal' }}\n        iconPosition=\"left\"\n        action={\n          search !== '' && {\n            color: 'teal',\n            icon: 'close',\n            onClick: () => setSearch(''),\n          }\n        }\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","export const optionsArray = [\n  { key: 'fb', text: 'Facebook', value: 'Facebook', icon: 'facebook' },\n  { key: 'ig', text: 'Instagram', value: 'Instagram', icon: 'instagram' },\n  { key: 'tw', text: 'Twitter', value: 'Twitter', icon: 'twitter' },\n  { key: 'gh', text: 'Github', value: 'Github', icon: 'github' },\n  { key: 'yt', text: 'Youtube', value: 'Youtube', icon: 'youtube' },\n];\n\nexport const siteIconsArray = [\n  'facebook',\n  'github',\n  'youtube',\n  'twitter',\n  'instagram',\n  'blogger',\n  'linkedin',\n  'reddit',\n  'medium',\n  'telegram',\n  'stack overflow',\n  'spotify',\n];\n\nconst labelColors = [\n  'red',\n  'orange',\n  'yellow',\n  'olive',\n  'green',\n  'teal',\n  'blue',\n  'violet',\n  'purple',\n  'pink',\n  'brown',\n  'grey',\n  'black',\n];\n\nexport const randomColor = () => {\n  return labelColors[Math.floor(Math.random() * labelColors.length)];\n};\n\nexport const getCircularAvatar = (imageLink) => {\n  const firstPart = imageLink.split('image/upload/')[0];\n  const secondPart = imageLink.split('image/upload/')[1];\n  const transformApi = 'w_200,h_200,c_fill,r_max/e_trim/';\n\n  return [firstPart, transformApi, secondPart].join('');\n};\n\nexport const generateBase64Encode = (file, setState) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onloadend = () => {\n    setState(reader.result);\n  };\n};\n","import React, { useState } from 'react';\nimport FormError from './FormError';\nimport contactService from '../services/contacts';\nimport { generateBase64Encode } from '../utils/arraysAndFuncs';\nimport { useMediaQuery } from 'react-responsive';\nimport { Modal, Header, Form, Button, Icon, Image } from 'semantic-ui-react';\n\nconst AddContactModal = ({\n  setContacts,\n  options,\n  handleOptionAddition,\n  notify,\n  isDarkMode,\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [url, setUrl] = useState('');\n  const [site, setSite] = useState('');\n  const [displayPicture, setDisplayPicture] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const addNewContact = async (e) => {\n    e.preventDefault();\n\n    const contactObject = {\n      name,\n      contacts: {\n        url,\n        site,\n      },\n      displayPicture,\n    };\n\n    try {\n      setIsLoading(true);\n      const returnedObject = await contactService.addNew(contactObject);\n      setContacts((prevState) => prevState.concat(returnedObject));\n      setIsLoading(false);\n      setError(null);\n\n      notify(`Added new contact named as \"${returnedObject.name}\"`, {\n        appearance: 'success',\n      });\n      handleClose();\n\n      setName('');\n      setUrl('');\n      setSite('');\n      setDisplayPicture('');\n      setFileName('');\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err?.response?.data;\n\n      if (errRes?.error) {\n        return setError(errRes.error);\n      } else {\n        return setError(err.message);\n      }\n    }\n  };\n\n  const fileInputOnChange = (e) => {\n    const file = e.target.files[0];\n    setFileName(file.name);\n    generateBase64Encode(file, setDisplayPicture);\n  };\n\n  const clearfileSelection = () => {\n    setDisplayPicture('');\n    setFileName('');\n  };\n\n  return (\n    <Modal\n      closeIcon\n      open={modalOpen}\n      trigger={\n        <Button\n          color=\"teal\"\n          icon\n          style ={{borderRadius : \"21px\"}}\n          labelPosition=\"left\"\n          fluid={isMobile}\n          size={isMobile ? 'medium' : 'large'}\n        >\n          <Icon name=\"add user\" />\n          Add New Contact\n        </Button>\n      }\n      onOpen={handleOpen}\n      onClose={handleClose}\n      className={isDarkMode ? 'dark-mode-modal modal' : 'modal'}\n    >\n      <Header icon=\"user add\" content=\"Add New Contact\" />\n      {error && <FormError message={error} setError={setError} />}\n      <Modal.Content>\n        <Form onSubmit={addNewContact}>\n          <Form.Input\n            required\n            placeholder=\"Enter name\"\n            label=\"Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            icon=\"user secret\"\n            iconPosition=\"left\"\n          />\n          <Form.Input\n            required\n            placeholder=\"For ex, https://www.facebook.com\"\n            type=\"text\"\n            label=\"URL\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            icon=\"linkify\"\n            iconPosition=\"left\"\n          />\n          <Form.Select\n            required\n            value={site}\n            options={options}\n            label=\"Site\"\n            allowAdditions\n            selection\n            search\n            placeholder=\"Select a site\"\n            onAddItem={handleOptionAddition}\n            onChange={(e, data) => setSite(data.value)}\n          />\n\n          <Button\n            as=\"label\"\n            icon=\"upload\"\n            htmlFor=\"dp-image\"\n            label={{\n              basic: true,\n              content:\n                fileName === ''\n                  ? 'Select Image for DP'\n                  : `Selected \"${fileName}\"`,\n            }}\n            labelPosition=\"right\"\n          />\n          <input\n            type=\"file\"\n            id=\"dp-image\"\n            accept=\"image/*\"\n            hidden\n            onChange={fileInputOnChange}\n          />\n          {displayPicture && (\n            <Button\n              onClick={clearfileSelection}\n              size=\"small\"\n              className={\n                isDarkMode\n                  ? 'clear-preview-btn dark-mode-clear-btn'\n                  : 'clear-preview-btn'\n              }\n            >\n              <Icon name=\"remove circle\" />\n              Un-select Image\n            </Button>\n          )}\n          {displayPicture && (\n            <Image\n              src={displayPicture}\n              size=\"medium\"\n              rounded\n              className=\"upload-preview\"\n            />\n          )}\n          <Modal.Actions>\n            <Button\n              color=\"green\"\n              type=\"submit\"\n              floated=\"right\"\n              loading={isLoading}\n            >\n              <Icon name=\"add user\" />\n              Submit\n            </Button>\n          </Modal.Actions>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default AddContactModal;\n","import React, { useState } from 'react';\nimport FormError from './FormError';\nimport contactService from '../services/contacts';\nimport { useMediaQuery } from 'react-responsive';\nimport { Modal, Header, Form, Button, Icon } from 'semantic-ui-react';\n\nconst LinkFormModal = ({\n  id,\n  urlId,\n  contacts,\n  setContacts,\n  type,\n  options,\n  handleOptionAddition,\n  urlToEdit,\n  siteToEdit,\n  notify,\n  isDarkMode,\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [url, setUrl] = useState(urlToEdit ? urlToEdit : '');\n  const [site, setSite] = useState(siteToEdit ? siteToEdit : '');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const newObject = {\n    url,\n    site,\n  };\n\n  const addNewLink = async (e) => {\n    e.preventDefault();\n\n    try {\n      setIsLoading(true);\n      const returnedObject = await contactService.addLink(id, newObject);\n      setContacts(contacts.map((c) => (c.id !== id ? c : returnedObject)));\n      setIsLoading(false);\n      setError(null);\n\n      notify(`Added new ${newObject.site} link \"${newObject.url}\"`, {\n        appearance: 'success',\n      });\n      setUrl('');\n      setSite('');\n      handleClose();\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err?.response?.data;\n\n      if (errRes?.error) {\n        return setError(errRes.error);\n      } else {\n        return setError(err.message);\n      }\n    }\n  };\n\n  const editLink = async (e) => {\n    e.preventDefault();\n\n    const targetContact = contacts.find((c) => c.id === id);\n\n    try {\n      setIsLoading(true);\n      const returnedObject = await contactService.editLink(\n        id,\n        urlId,\n        newObject\n      );\n\n      const updatedContactsKey = targetContact.contacts.map((t) =>\n        t.id !== urlId ? t : returnedObject\n      );\n\n      const updatedContact = {\n        ...targetContact,\n        contacts: updatedContactsKey,\n      };\n\n      setContacts(contacts.map((c) => (c.id !== id ? c : updatedContact)));\n      setIsLoading(false);\n      setError(null);\n\n      notify(`Edited ${newObject.site} link to \"${newObject.url}\"`, {\n        appearance: 'success',\n      });\n      handleClose();\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err.response.data;\n\n      if (errRes && errRes.error) {\n        return setError(errRes.error);\n      } else {\n        return setError(err.message);\n      }\n    }\n  };\n\n  const isTypeEdit = type === 'edit';\n\n  return (\n    <Modal\n      closeIcon\n      open={modalOpen}\n      trigger={\n        <Button\n        style ={{borderRadius : \"21px\"}}\n          color={isTypeEdit ? null : 'green'}\n          size={isTypeEdit ? 'tiny' : isMobile ? 'mini' : 'small'}\n          floated={isTypeEdit ? 'right' : 'left'}\n          icon={isTypeEdit ? 'edit' : 'add'}\n          content={isTypeEdit ? undefined : 'Add URL'}\n          className={isTypeEdit ? 'edit-btn' : 'add-btn'}\n          compact\n        />\n      }\n      onOpen={handleOpen}\n      onClose={handleClose}\n      className={isDarkMode ? 'dark-mode-modal modal' : 'modal'}\n    >\n      <Header\n        icon=\"linkify\"\n        content={isTypeEdit ? 'Edit Link - URL & Site' : 'Add New Link'}\n      />\n      {error && <FormError message={error} setError={setError} />}\n      <Modal.Content>\n        <Form onSubmit={isTypeEdit ? editLink : addNewLink}>\n          <Form.Input\n            required\n            placeholder=\"For ex, https://www.facebook.com\"\n            type=\"text\"\n            label=\"URL\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            icon=\"linkify\"\n            iconPosition=\"left\"\n          />\n          <Form.Select\n            required\n            value={site}\n            options={options}\n            label=\"Site\"\n            allowAdditions\n            selection\n            search\n            placeholder=\"Select a site\"\n            onChange={(e, data) => setSite(data.value)}\n            onAddItem={handleOptionAddition}\n          />\n          <Button\n            type=\"submit\"\n            color=\"green\"\n            floated=\"right\"\n            loading={isLoading}\n          >\n            <Icon name={isTypeEdit ? 'edit' : 'add'} />\n            {isTypeEdit ? 'Update' : 'Add'}\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default LinkFormModal;\n","import React, { useState } from 'react';\nimport FormError from './FormError';\nimport contactService from '../services/contacts';\nimport { useMediaQuery } from 'react-responsive';\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\n\nconst DeleteModal = ({\n  type,\n  contacts,\n  setContacts,\n  contact,\n  id,\n  urlId,\n  urlLink,\n  urlName,\n  notify,\n  isDarkMode,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const handleContactDelete = async () => {\n    try {\n      setIsLoading(true);\n      await contactService.deleteContact(id);\n      setContacts(contacts.filter((c) => c.id !== id));\n      setIsLoading(false);\n      setError(null);\n\n      notify(`Deleted contact \"${contact.name}\"`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err.response.data;\n\n      if (errRes && errRes.error) {\n        return setError(errRes.error);\n      } else {\n        return setError(err.message);\n      }\n    }\n  };\n\n  const handleLinkDelete = async () => {\n    const targetContact = contacts.find((c) => c.id === id);\n    const updatedContactsKey = targetContact.contacts.filter(\n      (t) => t.id !== urlId\n    );\n    const updatedContact = { ...targetContact, contacts: updatedContactsKey };\n\n    try {\n      setIsLoading(true);\n      await contactService.deleteLink(id, urlId);\n      setContacts(contacts.map((c) => (c.id !== id ? c : updatedContact)));\n      setIsLoading(false);\n      setError(null);\n\n      notify(`Deleted ${urlName} link \"${urlLink}\"`, {\n        appearance: 'success',\n      });\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err.response.data;\n\n      if (errRes && errRes.error) {\n        return setError(errRes.error);\n      } else {\n        return setError(err.message);\n      }\n    }\n  };\n\n  const isTypeContact = type === 'contact';\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={\n        <Button\n          content={\n            isTypeContact ? (isMobile ? undefined : 'Delete') : undefined\n          }\n          icon={isTypeContact ? 'user delete' : 'delete'}\n          color={isTypeContact ? 'red' : null}\n          size={isTypeContact ? (isMobile ? 'mini' : 'medium') : 'tiny'}\n          className={isTypeContact ? 'contact-del-btn' : 'delete-btn'}\n          floated={isTypeContact ? null : 'right'}\n          compact\n        />\n      }\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      className={isDarkMode ? 'dark-mode-modal' : ''}\n    >\n      <Header icon=\"trash alternate\" content=\"Confirm Delete\" />\n      {error && <FormError message={error} setError={setError} />}\n      <Modal.Content>\n        <p>\n          {isTypeContact\n            ? `Are you sure you want to delete contact named as '${contact.name}'?`\n            : `Are you sure you want to delete ${urlName} link '${urlLink}'?`}\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"red\" onClick={() => setOpen(false)} floated=\"left\">\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          color=\"green\"\n          onClick={isTypeContact ? handleContactDelete : handleLinkDelete}\n          loading={isLoading}\n          floated=\"right\"\n        >\n          <Icon name=\"checkmark\" /> Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import React, { useState } from 'react';\nimport { getCircularAvatar } from '../utils/arraysAndFuncs';\n\nimport { Header, Modal, Image } from 'semantic-ui-react';\n\nconst DisplayPictureModal = ({ imageLink, contactName, isDarkMode }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Modal\n      closeIcon\n      open={open}\n      trigger={\n        <Image\n          avatar\n          style={{ width: '49px', height: '49px' }}\n          src={getCircularAvatar(imageLink)}\n          className=\"avatar-image\"\n        />\n      }\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      className={isDarkMode ? 'dark-mode-modal' : ''}\n    >\n      <Header icon=\"picture\" content={`DP Preview: ${contactName}`} />\n      <Modal.Content>\n        <Image\n          src={imageLink}\n          size=\"large\"\n          rounded\n          className=\"avatar-preview\"\n        />\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default DisplayPictureModal;\n","import React, { useState } from 'react';\nimport FormError from './FormError';\nimport contactService from '../services/contacts';\nimport { generateBase64Encode } from '../utils/arraysAndFuncs';\nimport { useMediaQuery } from 'react-responsive';\nimport { Modal, Header, Form, Button, Icon, Image } from 'semantic-ui-react';\n\nconst EditContactModal = ({ oldName, setContacts, id, notify, isDarkMode }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [name, setName] = useState(oldName);\n  const [displayPicture, setDisplayPicture] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const addNewContact = async (e) => {\n    e.preventDefault();\n\n    const contactObject = {\n      name,\n      displayPicture,\n    };\n\n    try {\n      setIsLoading(true);\n      const returnedObject = await contactService.editContact(\n        id,\n        contactObject\n      );\n      setContacts((prevState) =>\n        prevState.map((p) => (p.id !== id ? p : returnedObject))\n      );\n      setIsLoading(false);\n      setError(null);\n\n      let message = `Updated contact \"${returnedObject.name}\"`;\n\n      if (oldName !== returnedObject.name && displayPicture !== '') {\n        message = `Updated contact name from \"${oldName}\" to \"${returnedObject.name}\" & changed DP`;\n      } else if (oldName === returnedObject.name && displayPicture !== '') {\n        message = `Updated DP of contact \"${returnedObject.name}\"`;\n      } else if (oldName !== returnedObject.name && displayPicture === '') {\n        message = `Updated contact name from \"${oldName}\" to \"${returnedObject.name}\"`;\n      }\n\n      notify(message, {\n        appearance: 'success',\n      });\n      handleClose();\n      setDisplayPicture('');\n      setFileName('');\n    } catch (err) {\n      setIsLoading(false);\n      const errRes = err?.response?.data;\n\n      if (errRes?.error) {\n        return setError(errRes.error);\n      } else {\n        return setError(err.message);\n      }\n    }\n  };\n\n  const fileInputOnChange = (e) => {\n    const file = e.target.files[0];\n    setFileName(file.name);\n    generateBase64Encode(file, setDisplayPicture);\n  };\n\n  const clearfileSelection = () => {\n    setDisplayPicture('');\n    setFileName('');\n  };\n\n  return (\n    <Modal\n      closeIcon\n      open={modalOpen}\n      trigger={\n        <Button\n          content={isMobile ? undefined : 'Edit'}\n          icon=\"edit\"\n          color=\"instagram\"\n          size={isMobile ? 'mini' : 'medium'}\n          className=\"contact-edit-btn\"\n          compact\n        />\n      }\n      onOpen={handleOpen}\n      onClose={handleClose}\n      className={isDarkMode ? 'dark-mode-modal modal' : 'modal'}\n    >\n      <Header\n        icon=\"edit\"\n        content=\"Edit Contact - Name &amp; Display Picture\"\n        inverted={isDarkMode}\n      />\n      {error && <FormError message={error} setError={setError} />}\n      <Modal.Content>\n        <Form onSubmit={addNewContact}>\n          <Form.Input\n            required\n            placeholder=\"Enter name\"\n            label=\"Name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            icon=\"user secret\"\n            iconPosition=\"left\"\n          />\n          <Button\n            as=\"label\"\n            icon=\"upload\"\n            htmlFor=\"dp-image\"\n            label={{\n              basic: true,\n              content:\n                fileName === ''\n                  ? 'Select Image for DP'\n                  : `Selected \"${fileName}\"`,\n            }}\n            labelPosition=\"right\"\n          />\n          <input\n            type=\"file\"\n            id=\"dp-image\"\n            accept=\"image/*\"\n            hidden\n            onChange={fileInputOnChange}\n          />\n          {displayPicture && (\n            <Button\n              onClick={clearfileSelection}\n              size=\"small\"\n              className=\"clear-preview-btn\"\n            >\n              <Icon name=\"remove circle\" />\n              Un-select Image\n            </Button>\n          )}\n          {displayPicture && (\n            <Image\n              src={displayPicture}\n              size=\"medium\"\n              rounded\n              className=\"upload-preview\"\n            />\n          )}\n          <Modal.Actions>\n            <Button\n              color=\"green\"\n              type=\"submit\"\n              floated=\"right\"\n              loading={isLoading}\n            >\n              <Icon name=\"edit\" />\n              Update\n            </Button>\n          </Modal.Actions>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default EditContactModal;\n","import React from 'react';\nimport LinkFormModal from './LinkFormModal';\nimport DeleteModal from './DeleteModal';\nimport DisplayPictureModal from './DisplayPictureModal';\nimport EditContactModal from './EditContactModal';\nimport { siteIconsArray, randomColor } from '../utils/arraysAndFuncs';\nimport { useMediaQuery } from 'react-responsive';\nimport { Header, Card, List, Label } from 'semantic-ui-react';\n\nconst ContactCard = ({\n  contact,\n  contacts,\n  setContacts,\n  options,\n  handleOptionAddition,\n  notify,\n  isDarkMode,\n}) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const linkCharCount = isMobile ? '30' : '70';\n\n  const formattedLink = (link) => {\n    return link.length > linkCharCount\n      ? link.slice(0, linkCharCount).concat('...')\n      : link;\n  };\n\n  return (\n    <Card style = {{boxShadow : 'rgb(0 0 0 / 8%) 0px 3px 28px'}} fluid className={isDarkMode ? 'dark-mode-card' : ''}>\n      <Card.Content>\n        <Header className=\"card-header\">\n          <div>\n            {contact.displayPicture.exists ? (\n              <DisplayPictureModal\n                imageLink={contact.displayPicture.link}\n                contactName={contact.name}\n                isDarkMode={isDarkMode}\n              />\n            ) : (\n              <Label\n                circular\n                color={randomColor()}\n                size=\"massive\"\n                className=\"avatar-label\"\n              >\n                {contact.name[0]}\n              </Label>\n            )}\n            <strong className=\"name-header\">{contact.name}</strong>\n          </div>\n          <div>\n            <EditContactModal\n              setContacts={setContacts}\n              id={contact.id}\n              notify={notify}\n              oldName={contact.name}\n              isDarkMode={isDarkMode}\n            />\n            <DeleteModal\n              type=\"contact\"\n              contact={contact}\n              contacts={contacts}\n              setContacts={setContacts}\n              id={contact.id}\n              notify={notify}\n              isDarkMode={isDarkMode}\n            />\n          </div>\n        </Header>\n      </Card.Content>\n      <Card.Content>\n        <List divided relaxed animated={!isMobile} inverted={isDarkMode}>\n          {contact.contacts.map((c) => (\n            <List.Item key={c.id}>\n              <List.Icon\n                name={\n                  siteIconsArray.includes(c.site.toLowerCase())\n                    ? c.site.toLowerCase()\n                    : 'linkify'\n                }\n                color={isDarkMode ? null : 'black'}\n                size=\"big\"\n              />\n              <List.Content>\n                <List.Header>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={\n                      c.url.startsWith('http') ? `${c.url}` : `https://${c.url}`\n                    }\n                  >\n                    {formattedLink(c.url).startsWith('http')\n                      ? formattedLink(c.url).split('//')[1]\n                      : formattedLink(c.url)}\n                  </a>\n                  <DeleteModal\n                    type=\"link\"\n                    contact={contact}\n                    contacts={contacts}\n                    setContacts={setContacts}\n                    id={contact.id}\n                    urlId={c.id}\n                    urlLink={c.url}\n                    urlName={c.site}\n                    notify={notify}\n                    isDarkMode={isDarkMode}\n                  />\n                  <LinkFormModal\n                    type=\"edit\"\n                    id={contact.id}\n                    urlId={c.id}\n                    contacts={contacts}\n                    setContacts={setContacts}\n                    options={options}\n                    handleOptionAddition={handleOptionAddition}\n                    urlToEdit={c.url}\n                    siteToEdit={c.site}\n                    notify={notify}\n                    isDarkMode={isDarkMode}\n                  />\n                </List.Header>\n                <List.Description as=\"a\">{c.site}</List.Description>\n              </List.Content>\n            </List.Item>\n          ))}\n        </List>\n        <LinkFormModal\n          type=\"add\"\n          id={contact.id}\n          contacts={contacts}\n          setContacts={setContacts}\n          options={options}\n          handleOptionAddition={handleOptionAddition}\n          notify={notify}\n          isDarkMode={isDarkMode}\n        />\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ContactCard;\n","import React from 'react';\nimport { Placeholder, Segment } from 'semantic-ui-react';\n\nconst ContactsLoader = ({ isDarkMode }) => {\n  return (\n    <div>\n      {Array.from(new Array(3)).map((_, i) => (\n        <Segment key={i} raised inverted={isDarkMode}>\n          <Placeholder fluid inverted={isDarkMode}>\n            <Placeholder.Header image>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder.Header>\n            <Placeholder.Paragraph>\n              <Placeholder.Line length=\"full\" />\n              <Placeholder.Line length=\"full\" />\n            </Placeholder.Paragraph>\n            <Placeholder.Paragraph>\n              <Placeholder.Line length=\"full\" />\n              <Placeholder.Line length=\"full\" />\n            </Placeholder.Paragraph>\n            <Placeholder.Paragraph>\n              <Placeholder.Line length=\"full\" />\n              <Placeholder.Line length=\"full\" />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        </Segment>\n      ))}\n    </div>\n  );\n};\n\nexport default ContactsLoader;\n","import React from 'react';\nimport ContactCard from './ContactCard';\nimport ContactsLoader from './ContactsLoader';\nimport { Header, Icon } from 'semantic-ui-react';\n\nconst ContactsDisplay = ({\n  contacts,\n  setContacts,\n  search,\n  options,\n  handleOptionAddition,\n  notify,\n  isLoading,\n  isDarkMode,\n}) => {\n  const filterByName = (contact, search) => {\n    return contact.name.toLowerCase().includes(search.toLowerCase());\n  };\n\n  const filterByProfileLinks = (contact, search) => {\n    const urlsArray = contact.contacts.map((c) => c.url);\n\n    return urlsArray.find((u) =>\n      u.toLowerCase().includes(search.toLowerCase())\n    );\n  };\n\n  const contactsToDisplay = contacts.filter(\n    (c) => filterByName(c, search) || filterByProfileLinks(c, search)\n  );\n\n  return (\n    <div className=\"contacts-display\">\n      {search !== '' && contactsToDisplay.length !== 0 && (\n        <Header className={isDarkMode ? 'dark-mode-info-text' : ''}>\n          <Icon name=\"searchengin\" />\n          Showing search results for query \"{search}\"\n        </Header>\n      )}\n      {search !== '' && contactsToDisplay.length === 0 && (\n        <Header\n          textAlign=\"center\"\n          as=\"h2\"\n          className={isDarkMode ? 'dark-mode-info-text main-text' : 'main-text'}\n        >\n          <Icon name=\"searchengin\" />\n          Search: No matches found for \"{search}\"\n        </Header>\n      )}\n      {!isLoading && search === '' && contactsToDisplay.length === 0 && (\n        <Header\n          textAlign=\"center\"\n          as=\"h2\"\n          className={isDarkMode ? 'dark-mode-info-text main-text' : 'main-text'}\n        >\n          <Icon name=\"info\" />\n          No contacts added yet.\n        </Header>\n      )}\n      {isLoading ? (\n        <ContactsLoader isDarkMode={isDarkMode} />\n      ) : (\n        contactsToDisplay.map((contact) => (\n          <ContactCard\n            contact={contact}\n            contacts={contacts}\n            setContacts={setContacts}\n            options={options}\n            handleOptionAddition={handleOptionAddition}\n            key={contact.id}\n            notify={notify}\n            isDarkMode={isDarkMode}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ContactsDisplay;\n","import React from 'react';\r\nimport Search from './Search';\r\nimport AddContactModal from '../components/AddContactModal';\r\nimport ContactsDisplay from '../components/ContactsDisplay';\r\nimport { Container, Header, Icon } from 'semantic-ui-react';\r\n\r\n/**\r\n* @author\r\n* @function Dashboard\r\n**/\r\n\r\nconst Dashboard = ({setSearch,search,isDarkMode,setContacts,options,notify,\r\n    contacts,handleOptionAddition,isLoading\r\n\r\n}) => {\r\n  return(\r\n    <>  <Container>\r\n            <Search\r\n              setSearch={setSearch}\r\n              search={search}\r\n              isDarkMode={isDarkMode}\r\n            />\r\n            <AddContactModal\r\n              setContacts={setContacts}\r\n              options={options}\r\n              handleOptionAddition={handleOptionAddition}\r\n              notify={notify}\r\n              isDarkMode={isDarkMode}\r\n            />\r\n            </Container>\r\n            <ContactsDisplay\r\n              contacts={contacts}\r\n              setContacts={setContacts}\r\n              search={search}\r\n              options={options}\r\n              handleOptionAddition={handleOptionAddition}\r\n              notify={notify}\r\n              isLoading={isLoading}\r\n              isDarkMode={isDarkMode}\r\n            />\r\n    </>\r\n   )\r\n\r\n }\r\n\r\nexport default Dashboard","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport RegisterForm from '../components/RegisterForm';\nimport LoginForm from '../components/LoginForm';\nimport storageService from '../utils/localStorageHelpers';\nimport Dashboard from './Dashboard';\n\nconst Routes = ({\n  contacts,\n  setContacts,\n  user,\n  setUser,\n  search,\n  setSearch,\n  options,\n  handleOptionAddition,\n  notify,\n  isLoading,\n  isDarkMode,\n}) => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {storageService.loadUser() || user ? (\n          <>\n            <Dashboard \n            contacts = {contacts}\n            setContacts ={setContacts}\n            search ={search}\n            setSearch ={setSearch}\n            options ={options}\n            notify={notify}\n            handleOptionAddition ={handleOptionAddition}\n            isLoading={isLoading}\n            isDarkMode={isDarkMode}\n            />\n          </>\n        ) : (\n          <Redirect to=\"login\" />\n        )}\n      </Route>\n      <Route exact path=\"/register\">\n        <RegisterForm\n          setUser={setUser}\n          notify={notify}\n          isDarkMode={isDarkMode}\n        />\n      </Route>\n      <Route exact path=\"/login\">\n        <LoginForm setUser={setUser} notify={notify} isDarkMode={isDarkMode} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport NavBar from './components/NavBar';\nimport Routes from './components/Routes';\nimport contactService from './services/contacts';\nimport { optionsArray } from './utils/arraysAndFuncs';\nimport storageService from './utils/localStorageHelpers';\nimport { useToasts } from 'react-toast-notifications';\nimport { Container, Segment } from 'semantic-ui-react';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [user, setUser] = useState(null);\n  const [options, setOptions] = useState(optionsArray);\n  const [isLoading, setIsLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const { addToast: notify } = useToasts();\n\n  useEffect(() => {\n    const loggedUser = storageService.loadUser();\n\n    if (loggedUser) {\n      setUser(loggedUser);\n      contactService.setToken(loggedUser.token);\n    }\n  }, []);\n\n  useEffect(() => {\n    const getAllContacts = async () => {\n      try {\n        setIsLoading(true);\n        const contacts = await contactService.getAll();\n        setContacts(contacts);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        notify(err.message, {\n          appearance: 'error',\n        });\n      }\n    };\n\n    if (user) {\n      getAllContacts();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  useEffect(() => {\n    const darkMode = storageService.loadDarkMode();\n    if (darkMode === 'true') {\n      setIsDarkMode(true);\n    }\n  }, []);\n\n  const handleOptionAddition = (e, data) => {\n    setOptions((prevState) => [\n      {\n        key: data.value,\n        text: data.value,\n        value: data.value,\n        icon: 'linkify',\n      },\n      ...prevState,\n    ]);\n  };\n\n  return (\n    <Segment className=\"main-segment\" inverted={isDarkMode}>\n      <NavBar\n          user={user}\n          setUser={setUser}\n          isDarkMode={isDarkMode}\n          setIsDarkMode={setIsDarkMode}\n        />\n      <Container className=\"container\">\n        \n        <Routes\n          contacts={contacts}\n          setContacts={setContacts}\n          user={user}\n          setUser={setUser}\n          search={search}\n          setSearch={setSearch}\n          options={options}\n          handleOptionAddition={handleOptionAddition}\n          notify={notify}\n          isLoading={isLoading}\n          isDarkMode={isDarkMode}\n        />\n      </Container>\n    </Segment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\n\nReactDOM.render(\n  <ToastProvider placement=\"bottom-center\" autoDismiss={true}>\n    <Router>\n      <App />\n    </Router>\n  </ToastProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}